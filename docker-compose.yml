version: '3'
services:
  api:
    build: './api'
    environment:
      ELASTIC_HOST: http://elastic
      ELASTIC_PORT: 9200
      ELASTIC_USER: elastic
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      REDIS_HOST: redis://redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: $REDIS_PASSWORD
      WAIT_HOSTS: elastic:9200, redis:6379
    depends_on:
      - elastic
      - redis

  auth:
    build: './auth'
    environment:
      SECRET_KEY: $FLASK_SECRET_KEY
      FLASK_APP: main:app
      DB_HOST: auth_db
      DB_PASSWORD: ${AUTH_DB_PASSWORD}
      DB_USER: auth_app
      DB_NAME: auth_database
      SUPERUSER_PASSWORD: ${SUPERUSER_PASSWORD}
      VK_CLIENT_SECRET: ${VK_CLIENT_SECRET}
      YANDEX_CLIENT_SECRET: ${YANDEX_CLIENT_SECRET}
      DB_PORT: 4321
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: $REDIS_PASSWORD
      HOST: auth
      DEBUG: ${AUTH_DEBUG}
      WAIT_HOSTS: auth_db:4321, redis:6379
      TRACE_SAMPLING_FREQUENCY: 1
    volumes:
    - './auth/src/migrations:/app/migrations'
    depends_on:
      - auth_db
      - redis

  tracing:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"

  nginx:
    image: nginx:1.21-alpine
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
    depends_on:
      - api
    ports:
      - "80:80"
    restart: always

  auth_db:
    build: './auth_db'
    environment:
      POSTGRES_USER: auth_app
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: auth_database
    volumes:
      - 'auth_db_data:/var/lib/postgres/data'
    command: -p 4321

  content_db:
    build: './content_db'
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: ${CONTENT_DB_PASSWORD}
      POSTGRES_DB: movies_database
    volumes:
      - 'content_db_data:/var/lib/postgres/data'

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms200m -Xmx200m
      xpack.security.http.ssl.enabled: 'false'
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
    expose:
      - 9200
    volumes:
    - 'elastic_data:/usr/share/elasticsearch/data'

  redis:
    image: redis:6.2.6
    command: redis-server --requirepass $REDIS_PASSWORD
    expose:
      - 6379
    volumes:
      - redis_data:/var/lib/redis

  etl:
    build: './etl'
    environment:
      DB_USER: app
      DB_PASSWORD: ${CONTENT_DB_PASSWORD}
      DB_NAME: movies_database
      DB_HOST: content_db
      DB_PORT: ${CONTENT_DB_PORT}
      ELASTIC_HOST: http://elastic:9200
      ELASTIC_USER: elastic
      ELASTIC_PASSWORD: $ELASTIC_PASSWORD
      WAIT_HOSTS: elastic:9200, content_db:5432
    volumes:
    - $STATE_PATH:/app/state
    depends_on:
      - content_db
      - elastic

volumes:
  content_db_data:
  auth_db_data:
  elastic_data:
  redis_data:

